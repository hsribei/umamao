- content_for :js do
  = include_javascripts :content_show

- content_for :sidebar do
  = render :partial => "follow", :locals => {:topic => @topic, :block => "block"}
  - if @topic.followers.count > 0
    .block.followers{"data-entry-type" => "topic"}
      %h2.title.count
        = t('followable.followers', :count => @topic.followers.count)
      .friend_list
        - @topic.followers.each do |follower|
          %span{"data-user-id" => follower.id}
            = link_to avatar_for(follower, :size => 24).html_safe, user_path(follower)

.secondary-navigation
  .navtitle
    &= @topic.title
%br

.markdown
  = markdown(@topic.description)

%p
  = link_to t('scaffold.edit'), edit_topic_path(@topic), :class => "edit-link"

.secondary-navigation
  - tabs_tag :namespace => :topic_show do |tab|
    = tab.all t('.all_tab'), @topic
    = tab.unanswered "#{t('.unanswered_tab')} (#{@topic.unanswered_questions_count.to_s})" , unanswered_topic_path(@topic)
%br

- if @news_items.blank?
  %ul.items#questions
    - if @questions.blank?
      %li.highlight
        = t(".empty")
    - @questions.each do |question|
      = render :partial => "questions/question", :object => question
- else
  %ul.items#news_items
    - @news_items.each do |news_item|
      = render :partial => "welcome/news_item", :object => news_item

#additional_info
  - if @news_items.blank?
    = will_paginate @questions
  - else
    = will_paginate @news_items

  #help_us
    = t("questions.index.help_to_answer")
    = link_to t("questions.index.unanswered_questions"), unanswered_topic_path(@topic)

  .clear
